
系统调用 bpf: int bpf(int cmd, union bpf_attr *attr, unsigned int size);
bpf 程序主要分为2类： 跟踪，网络。

socket filter programs: 提供能力观察网络包

kprobe programs: 利用krobe 函数

tracepoint programs: 将bpf函数attach 到内核提供的 tracepoint handler. /sys/kernel/debug/tracing/events

xdp programs: 当网络包到达内核时，可以首先处理 xdp_pass xdp_drop xdp_tx等

perf event programs: 根据 perf events 

cgroup socket programs: 类似于socket filter programs, 但attach不同

cgroup open socket programs: 当in a cgroup打开一个socket时，执行代码

socket option programs: 在运行时，修改socket option 

socket map programs: 能力到socket maps 和 socket redirects

cgroup device programs: 
socket message delivery programs: 
raw tracepoint programs:
cgroup socket address programs:

socket reuseport programs: 允许多个程序绑定到同样的端口

flow dissection programs: 跟踪网络包到不同的网络层

bpf maps 
    程序之间进行通信。bfp程序通过访问存在内核中的bpf maps 用户空间的程序通过文件描述符访问。

    通过系统调用bpf创建 maps.
    
    bpf_create_map  或  通过 struct bpf_map_def SEC("maps") 文件描述符通过全局变量 map_data数组
    bpf_map_lookup_elem
    bpf_map_update_elem
    bpf_map_delete_elem
    struct bpf_spin_lock  bpf_spin_unlock
    bpf_obj_pin bpf_obj_get

kernel probes： 通过设置动态flag. 当内核执行到某一flag，执行附加的代码，然后继续原先的代码。
    分为： kprobes kretprobes 不同内核版本可能会发生变化

    tracepoint 
userland probes： 用户空间跟踪。

    user statically defined tracepoints (USDTs) 

关于网络：
    主要的三个应用场景：
        1、包过滤 2、观察流入的包 3、统计网络包

xdp 只处理 unfragmented网络包， 相关数据包的开始，结束指针
 1、在网络驱动中的接受路径中执行xdp bpf programs
 2、通用xdp。

 linux kernel security capabilities seccomp. seccomp bpf 
    capabilities: capsh, bpftrace
    过滤系统调用。
        seccomp 通过系统调用 prctl

常见软件
    sysdig  flowmill